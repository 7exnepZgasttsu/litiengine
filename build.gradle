plugins {
  id 'com.stehno.natives' version '0.3.1'
  id "org.sonarqube" version "2.5"
}

natives {
  configurations = ['runtime']
  outputDir = 'libs'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven'

archivesBaseName = "litiengine"
version = "v0.4.7-alpha"

sourceSets {
  main.java.srcDir "src"
  main.java.srcDir "resources"
  
  test {
    java {
      srcDirs = ["tests"] 
    }
  }
}

repositories {
   mavenCentral()
}

dependencies {
  compile 'net.java.jinput:jinput:2.0.7'
  compile 'com.googlecode.soundlibs:jorbis:0.0.17.4'
  compile 'com.googlecode.soundlibs:tritonus-share:0.3.7.4'
  compile 'com.googlecode.soundlibs:vorbisspi:1.0.3.3'
  compile 'com.googlecode.soundlibs:mp3spi:1.9.5.4'
  compile 'com.code-disaster.steamworks4j:steamworks4j:1.6.2'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:2.+'
}

jar {
  from configurations.compile.collect { zipTree it }
  
  from('resources') { include '**/*' }
  
  exclude '**/*.dll'
  exclude '**/*.jnilib'
  exclude '**/*.dylib'
  exclude '**/*.so'
  exclude 'junit**/**'
}

javadoc {
  options.encoding 'UTF-8'
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled true
  }
}

task createJavadocs(type: Javadoc) {
  source sourceSets.main.allJava
  classpath = configurations.compile
  options.encoding 'UTF-8'
  dependsOn build
}

task distZip(type: Zip) {
   group 'build'
   from 'build/libs/'
   include '*'
   archiveName archivesBaseName + '-' + version + '.zip'
   exclude archiveName
   destinationDir(file('build/libs/'))
}

task fullbuild{
  group 'build'
  description 'executes the build including unit tests, coverage reports and javadoc'
  dependsOn createJavadocs
}

fullbuild.dependsOn jacocoTestReport
fullbuild.dependsOn distZip
build.dependsOn includeNatives

task copyNativeLibs(type: Copy) { 
  from(new File('.')) { include 'LICENSE' }
  into new File(buildDir, 'libs')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    dependsOn copyNativeLibs
}